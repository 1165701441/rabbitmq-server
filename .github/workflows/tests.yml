# https://help.github.com/en/actions/configuring-and-managing-workflows/configuring-a-workflow
name: Tests
on: push
jobs:
  check:
    name: Components & Xref
    runs-on: ubuntu-18.04
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: 21.3
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: CHECK RABBITMQ COMPONENTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make check-rabbitmq-components.mk base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      # TODO: Are there any xref results that we should capture as artefacts?
      - name: CHECK CROSS REFERENCES
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make xref base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
  eunit:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: eunit OTP v${{matrix.otp}}
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make eunit base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
  amqqueue_backward_compatibility:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: v${{matrix.otp}} amqqueue_backward_compatibility
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-amqqueue_backward_compatibility base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
  backing_queue:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: v${{matrix.otp}} backing_queue
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-backing_queue base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
  channel_interceptor:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: v${{matrix.otp}} channel_interceptor
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-channel_interceptor base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
  channel_operation_timeout:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: v${{matrix.otp}} channel_operation_timeout
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-channel_operation_timeout base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
  cluster:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: v${{matrix.otp}} cluster
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-cluster base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
  cluster_formation_locking:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: v${{matrix.otp}} cluster_formation_locking
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-cluster_formation_locking base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
  authn_authz_context_propagation:
    needs: check
    # https://help.github.com/en/actions/reference/context-and-expression-syntax-for-github-actions#contexts
    name: v${{matrix.otp}} authn_authz_context_propagation
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        otp: [21.3, 22.2]
    steps:
      - name: CHECKOUT REPOSITORY
        uses: actions/checkout@v2
      # https://github.com/marketplace/actions/setup-elixir
      - name: CONFIGURE OTP & ELIXIR
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{matrix.otp}}
          # https://github.com/elixir-lang/elixir/releases
          elixir-version: 1.10.2
      - name: RUN TESTS
        run: |
          branch_or_tag_name=${GITHUB_REF#refs/*/}
          make ct-authn_authz_context_propagation base_rmq_ref=master current_rmq_ref=$branch_or_tag_name
      - name: ON FAILURE CAPTURE TESTS LOGS AS ARTIFACT
        # https://github.com/marketplace/actions/upload-artifact
        uses: actions/upload-artifact@v1
        if: failure()
        with:
          name: tests-logs-OTPv${{matrix.otp}}
          path: logs
